---
title: Vaccine allocation
format: html
---

```{python}
import numpy as np
import ngm as ngm
import pandas as pd
import matplotlib.pyplot as plt
import yaml

yaml_path = "config.yaml"

with open(yaml_path) as f:
    params = yaml.safe_load(f)["params"]
```

# 3 group model

Here we model the efficacy of varying vaccine allocation to core, children, and general groups.

We assume the following population breakdown:

* core: 5% of the population
* children: 45% of the population
* general: 50% of the population

Vaccine strategies:

* all to core
* all to kids
* even distribution to everyone

We vary population sizes of this analysis to a large city of 10 million and a medium city of 1 million with 1 million and 200,000 doses of vaccination available respectively.

We assume vaccine efficacy of a single dose vaccine of 75%.

Disease parameters:

* $R_0$ 1.5, 3
* Transmission 10x higher in core group than general

We calculate $R_e$ for each of the vaccine scenarios in each population scenario and each $R_0$ scenario (3 vax x 2 pop x 2 R0 = 12 scenarios) using the next generation matrix approach. We also calculate the distribution of infections and severe infections (per infection) under each scenario.

Parameters can be found in `config.yaml`

```{python}
scenario_names = {None: "even", 0: "core first", 1: "children first"}

results = []
for N in params["N"]:
    # total population
    N = float(N)
    # population proportions
    n = np.array([params["n_core"], params["n_children"], params["n_general"]])
    assert sum(n) == 1.0
    # population sizes
    N_i = n * N

    for scenario in params["scenario"]:
        for V in params["V"]:
            for beta_low in params["beta_low"]:
                beta = np.array(
                    [
                        [params["beta_high"], beta_low, beta_low],
                        [beta_low, beta_low, beta_low],
                        [beta_low, beta_low, beta_low],
                    ]
                )
                p_severe = np.array(
                    [
                        params["p_severe_adults"],
                        params["p_severe_children"],
                        params["p_severe_adults"],
                    ]
                )
                ve = params["VE"]

                n_vax = ngm.distribute_vaccines(V, N_i, strategy=scenario)
                result = ngm.simulate(
                    n=N_i, n_vax=n_vax, beta=beta, p_severe=p_severe, ve=ve
                )

                infections = result["infections"]
                severe_infections = result["severe_infections"]

                results.append(
                    {
                        "N": N,
                        "N_core": N_i[0],
                        "N_children": N_i[1],
                        "N_general": N_i[2],
                        "Scenario": scenario_names[scenario],
                        "V": V,
                        "V_core": n_vax[0],
                        "V_children": n_vax[1],
                        "V_general": n_vax[2],
                        "Beta Low": beta_low,
                        "Re": result["Re"],
                        "Infections Core": infections[0],
                        "Infections Children": infections[1],
                        "Infections General": infections[2],
                        "Severe Infections Core": severe_infections[0],
                        "Severe Infections Children": severe_infections[1],
                        "Severe Infections General": severe_infections[2],
                    }
                )

```

```{python}
# | output: asis

# Convert results to a DataFrame
results_df = pd.DataFrame(results)
results_df.to_csv("simulation_results.csv", index=False)


print(results_df.to_markdown())

# save results
results_df.to_csv("simulation_results.csv", index=False)
```
