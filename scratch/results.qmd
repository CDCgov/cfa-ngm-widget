---
title: Vaccine allocation
format: html
---

```{python}
import numpy as np
import ngm as ngm
import pandas as pd
import matplotlib.pyplot as plt
import yaml

yaml_path = "config.yaml"

with open(yaml_path) as f:
    params = yaml.safe_load(f)['params']
```

# 3 group model

Here we model the efficacy of varying vaccine allocation to core, children, and general groups.

We assume the following population breakdown:

* core: 5% of the population
* children: 45% of the population
* general: 50% of the population

Vaccine strategies:

* all to core
* all to kids
* even distribution to everyone

We vary population sizes of this analysis to a large city of 10 million and a medium city of 1 million with 1 million and 200,000 doses of vaccination available respectively.

We assume vaccine efficacy of a single dose vaccine of 75%.

Disease parameters:
* $R_0$ 1.5, 3
* Transmission 10x higher in core group than general

We calculate $R_e$ for each of the vaccine scenarios in each population scenario and each $R_0$ scenario (3 vax x 2 pop x 2 R0 = 12 scenarios) using the next generation matrix approach. We also calculate the distribution of infections and severe infections (per infection) under each scenario.

Parameters can be found in `config.yaml`

```{python}
results = []
for N in params['N']:
    N = float(N)
    n = np.array([params['n_core'], params['n_children'], params['n_general']])
    N_i = n * N

    for scenario in params['scenario']:
        for V in params['V']:
            for beta_low in params['beta_low']:
                beta = np.array([
                    [params['beta_high'], beta_low, beta_low],
                    [beta_low, beta_low, beta_low],
                    [beta_low, beta_low, beta_low]
                ])
                p_severe = np.array([params['p_severe_adults'], params['p_severe_children'], params['p_severe_adults']])
                ve = params['VE']

                print(V)
                print(N_i)
                n_vax = ngm.distribute_vaccines(V, N_i, strategy=scenario)
                result = ngm.simulate(n=N_i, n_vax=n_vax, beta=beta, p_severe=p_severe, ve=ve)

                results.append({
                    "N": N,
                    "Scenario": scenario,
                    "V": V,
                    "Beta Low": beta_low,
                    "Re": result["Re"],
                    "Infections": result["infections"],
                    "Severe Infections": result["severe_infections"]
                })

# Convert results to a DataFrame
results_df = pd.DataFrame(results)

# Display the results
print(results_df)
```
